abort : Fun {A : Type} -> String -> A;
abort {A = _} = primitive "abort";

string-eq = primitive "string-eq" : String -> String -> Bool;
char-eq = primitive "char-eq" : Char -> Char -> Bool;
u8-eq = primitive "u8-eq" : U8 -> U8 -> Bool;
u16-eq = primitive "u16-eq" : U16 -> U16 -> Bool;
u32-eq = primitive "u32-eq" : U32 -> U32 -> Bool;
u64-eq = primitive "u64-eq" : U64 -> U64 -> Bool;
s8-eq = primitive "s8-eq" : S8 -> S8 -> Bool;
s16-eq = primitive "s16-eq" : S16 -> S16 -> Bool;
s32-eq = primitive "s32-eq" : S32 -> S32 -> Bool;
s64-eq = primitive "s64-eq" : S64 -> S64 -> Bool;
f32-eq = primitive "f32-eq" : F32 -> F32 -> Bool;
f64-eq = primitive "f64-eq" : F64 -> F64 -> Bool;

string-ne = primitive "string-ne" : String -> String -> Bool;
char-ne = primitive "char-ne" : Char -> Char -> Bool;
u8-ne = primitive "u8-ne" : U8 -> U8 -> Bool;
u16-ne = primitive "u16-ne" : U16 -> U16 -> Bool;
u32-ne = primitive "u32-ne" : U32 -> U32 -> Bool;
u64-ne = primitive "u64-ne" : U64 -> U64 -> Bool;
s8-ne = primitive "s8-ne" : S8 -> S8 -> Bool;
s16-ne = primitive "s16-ne" : S16 -> S16 -> Bool;
s32-ne = primitive "s32-ne" : S32 -> S32 -> Bool;
s64-ne = primitive "s64-ne" : S64 -> S64 -> Bool;
f32-ne = primitive "f32-ne" : F32 -> F32 -> Bool;
f64-ne = primitive "f64-ne" : F64 -> F64 -> Bool;

string-lt = primitive "string-lt" : String -> String -> Bool;
char-lt = primitive "char-lt" : Char -> Char -> Bool;
u8-lt = primitive "u8-lt" : U8 -> U8 -> Bool;
u16-lt = primitive "u16-lt" : U16 -> U16 -> Bool;
u32-lt = primitive "u32-lt" : U32 -> U32 -> Bool;
u64-lt = primitive "u64-lt" : U64 -> U64 -> Bool;
s8-lt = primitive "s8-lt" : S8 -> S8 -> Bool;
s16-lt = primitive "s16-lt" : S16 -> S16 -> Bool;
s32-lt = primitive "s32-lt" : S32 -> S32 -> Bool;
s64-lt = primitive "s64-lt" : S64 -> S64 -> Bool;
f32-lt = primitive "f32-lt" : F32 -> F32 -> Bool;
f64-lt = primitive "f64-lt" : F64 -> F64 -> Bool;

string-le = primitive "string-le" : String -> String -> Bool;
char-le = primitive "char-le" : Char -> Char -> Bool;
u8-le = primitive "u8-le" : U8 -> U8 -> Bool;
u16-le = primitive "u16-le" : U16 -> U16 -> Bool;
u32-le = primitive "u32-le" : U32 -> U32 -> Bool;
u64-le = primitive "u64-le" : U64 -> U64 -> Bool;
s8-le = primitive "s8-le" : S8 -> S8 -> Bool;
s16-le = primitive "s16-le" : S16 -> S16 -> Bool;
s32-le = primitive "s32-le" : S32 -> S32 -> Bool;
s64-le = primitive "s64-le" : S64 -> S64 -> Bool;
f32-le = primitive "f32-le" : F32 -> F32 -> Bool;
f64-le = primitive "f64-le" : F64 -> F64 -> Bool;

string-ge = primitive "string-ge" : String -> String -> Bool;
char-ge = primitive "char-ge" : Char -> Char -> Bool;
u8-ge = primitive "u8-ge" : U8 -> U8 -> Bool;
u16-ge = primitive "u16-ge" : U16 -> U16 -> Bool;
u32-ge = primitive "u32-ge" : U32 -> U32 -> Bool;
u64-ge = primitive "u64-ge" : U64 -> U64 -> Bool;
s8-ge = primitive "s8-ge" : S8 -> S8 -> Bool;
s16-ge = primitive "s16-ge" : S16 -> S16 -> Bool;
s32-ge = primitive "s32-ge" : S32 -> S32 -> Bool;
s64-ge = primitive "s64-ge" : S64 -> S64 -> Bool;
f32-ge = primitive "f32-ge" : F32 -> F32 -> Bool;
f64-ge = primitive "f64-ge" : F64 -> F64 -> Bool;

string-gt = primitive "string-gt" : String -> String -> Bool;
char-gt = primitive "char-gt" : Char -> Char -> Bool;
u8-gt = primitive "u8-gt" : U8 -> U8 -> Bool;
u16-gt = primitive "u16-gt" : U16 -> U16 -> Bool;
u32-gt = primitive "u32-gt" : U32 -> U32 -> Bool;
u64-gt = primitive "u64-gt" : U64 -> U64 -> Bool;
s8-gt = primitive "s8-gt" : S8 -> S8 -> Bool;
s16-gt = primitive "s16-gt" : S16 -> S16 -> Bool;
s32-gt = primitive "s32-gt" : S32 -> S32 -> Bool;
s64-gt = primitive "s64-gt" : S64 -> S64 -> Bool;
f32-gt = primitive "f32-gt" : F32 -> F32 -> Bool;
f64-gt = primitive "f64-gt" : F64 -> F64 -> Bool;

u8-add = primitive "u8-add" : U8 -> U8 -> U8;
u16-add = primitive "u16-add" : U16 -> U16 -> U16;
u32-add = primitive "u32-add" : U32 -> U32 -> U32;
u64-add = primitive "u64-add" : U64 -> U64 -> U64;
s8-add = primitive "s8-add" : S8 -> S8 -> S8;
s16-add = primitive "s16-add" : S16 -> S16 -> S16;
s32-add = primitive "s32-add" : S32 -> S32 -> S32;
s64-add = primitive "s64-add" : S64 -> S64 -> S64;
f32-add = primitive "f32-add" : F32 -> F32 -> F32;
f64-add = primitive "f64-add" : F64 -> F64 -> F64;

u8-sub = primitive "u8-sub" : U8 -> U8 -> U8;
u16-sub = primitive "u16-sub" : U16 -> U16 -> U16;
u32-sub = primitive "u32-sub" : U32 -> U32 -> U32;
u64-sub = primitive "u64-sub" : U64 -> U64 -> U64;
s8-sub = primitive "s8-sub" : S8 -> S8 -> S8;
s16-sub = primitive "s16-sub" : S16 -> S16 -> S16;
s32-sub = primitive "s32-sub" : S32 -> S32 -> S32;
s64-sub = primitive "s64-sub" : S64 -> S64 -> S64;
f32-sub = primitive "f32-sub" : F32 -> F32 -> F32;
f64-sub = primitive "f64-sub" : F64 -> F64 -> F64;

s8-neg = primitive "s8-neg" : S8 -> S8;
s16-neg = primitive "s16-neg" : S16 -> S16;
s32-neg = primitive "s32-neg" : S32 -> S32;
s64-neg = primitive "s64-neg" : S64 -> S64;
f32-neg = primitive "f32-neg" : F32 -> F32;
f64-neg = primitive "f64-neg" : F64 -> F64;

u8-mul = primitive "u8-mul" : U8 -> U8 -> U8;
u16-mul = primitive "u16-mul" : U16 -> U16 -> U16;
u32-mul = primitive "u32-mul" : U32 -> U32 -> U32;
u64-mul = primitive "u64-mul" : U64 -> U64 -> U64;
s8-mul = primitive "s8-mul" : S8 -> S8 -> S8;
s16-mul = primitive "s16-mul" : S16 -> S16 -> S16;
s32-mul = primitive "s32-mul" : S32 -> S32 -> S32;
s64-mul = primitive "s64-mul" : S64 -> S64 -> S64;
f32-mul = primitive "f32-mul" : F32 -> F32 -> F32;
f64-mul = primitive "f64-mul" : F64 -> F64 -> F64;

u8-div = primitive "u8-div" : U8 -> U8 -> U8;
u16-div = primitive "u16-div" : U16 -> U16 -> U16;
u32-div = primitive "u32-div" : U32 -> U32 -> U32;
u64-div = primitive "u64-div" : U64 -> U64 -> U64;
s8-div = primitive "s8-div" : S8 -> S8 -> S8;
s16-div = primitive "s16-div" : S16 -> S16 -> S16;
s32-div = primitive "s32-div" : S32 -> S32 -> S32;
s64-div = primitive "s64-div" : S64 -> S64 -> S64;
f32-div = primitive "f32-div" : F32 -> F32 -> F32;
f64-div = primitive "f64-div" : F64 -> F64 -> F64;

u8-to-string = primitive "u8-to-string" : U8 -> String;
u16-to-string = primitive "u16-to-string" : U16 -> String;
u32-to-string = primitive "u32-to-string" : U32 -> String;
u64-to-string = primitive "u64-to-string" : U64 -> String;
s8-to-string = primitive "s8-to-string" : S8 -> String;
s16-to-string = primitive "s16-to-string" : S16 -> String;
s32-to-string = primitive "s32-to-string" : S32 -> String;
s64-to-string = primitive "s64-to-string" : S64 -> String;
f32-to-string = primitive "f32-to-string" : F32 -> String;
f64-to-string = primitive "f64-to-string" : F64 -> String;
